1. 성능튜닝
스파크 잡 실행 과정 중에 익스큐터나 드라이버 머신의 메모리가 부족할 수 있다.
3가지 원인은 첫째, 애플리케이션 실행 중 메모리를 너무 많이 사용한 경우
둘째, 가비지 컬렉션이 자주 수행되는 경우 셋째, JVM내에서 객체가 너무 많이 생성되어
더이상 사용하지 않은 객체를 가비지 컬렉션이 정리하면서 속도가 느려지는 경우

-> 세번째 원인은 구조적 API를 활용하면 해결된다.

1.1. 가비지 컬렉션 튜닝
가비지 컬렉션 수행절차
1) 자바 힙 공간은 old와 young으로 나뉜다. young은 수명이 짧은 객체를 유지,
old는 오래 살아있는 객체를 대상으로 함
2) young은 eden, survivor1, survivor2로 나뉜다.
3) Eden이 가득차면 이에대한 마이너 가비지 컬렉션이 실행된다.
Eden에서 살아남은 객체와 Survivor1 영역의 객체는 survivor2 영역으로 복제된다.
4) Survivor 두 영역을 교체한다
5) old 영역이 거의 차면 풀 가비지 컬렉션이 발생한다. 풀 가비지 컬렉션은 힙 공간의
모든 객체를 추적해 참조 정보가 없는 객체들을 제거한다. 

* 가비지 컬렉션 튜닝의 목표
1) 수명이 긴 캐시 데이터셋을 old영역에 저장, young 영역에서 수명이 짧은
모든 객체를 보관할 수 있도록 충분한 공간을 유지하는 것 => 풀 가비지 컬렉션 피할 수 있음

2. 병렬화
특정 스테이지의 처리 속도를 높이려면 가장 먼저 병렬성을 높이는 작업부터 시작해야한다.
